你正在使用一堆木板建造跳水板。有两种类型的木板，其中长度较短的木板长度为shorter，长度较长的木板长度为longer。你必须正好使用k块木板。编写一个方法，生成跳水板所有可能的长度。

返回的长度需要从小到大排列。

示例 1

输入：
shorter = 1
longer = 2
k = 3
输出： [3,4,5,6]
解释：
可以使用 3 次 shorter，得到结果 3；使用 2 次 shorter 和 1 次 longer，得到结果 4 。以此类推，得到最终结果。




class Solution {
    public int[] divingBoard(int shorter, int longer, int k) {
        
        if(k==0) return new int[0];//k=0时返回空数字；
        if(shorter==longer){//短木板=长木板时，结果只有一个
            int[] n=new int[1];
            n[0]=k;
            return n;
        }
        
        int[] m=new int[k+1];
        for(int i=k;i>=0;i--){//短木板从k开始到0；
            m[k-i]=shorter*i+longer*(k-i);
        }
        return m;
    }
}
